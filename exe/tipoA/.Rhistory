library(tidyverse)
library(tidymodels)
library(openintro)
library(scales)
library(ggmosaic)
library(broom)
blizzard_salary <- blizzard_salary
blizzard_salary <- blizzard_salary |>
mutate(
salario_anual = case_when(
salary_type == "week" ~ current_salary * 52,
salary_type == "hour" ~ current_salary * 40 * 52,
TRUE ~ current_salary
),
performance_rating = if_else(performance_rating == "Developing", "Poor", performance_rating)
) |>
filter(salary_type != "week") |>
mutate(
salary_type = if_else(salary_type == "hour", "Contrato por Hora", "Contrato Fijo")
) |>
filter(!is.na(salario_anual)) |>
select(percent_incr, salary_type, salario_anual, performance_rating)
View(blizzard_salary)
help(rename)
blizzard_salary <- blizzard_salary |>
rename(incr_porcentual = percent_incr,
tipo_contrato = salary_type,
rating_performance = performance_rating)
blizzard_salary |> select(rating_performance) |> distinct() |> pull()
blizzard_salary <- blizzard_salary |>
rename(incr_porcentual = percent_incr,
tipo_contrato = salary_type,
rating_performance = performance_rating)  |>
mutate(rating_performance = fct_recode(rating_performance,
"Malo" = "Poor",
"Normal" = "Succesful",
"Bueno" = "High",
"Excelente" = "Top"))
rm(blizzard_salary)
blizzard_salary <- blizzard_salary
blizzard_salary <- blizzard_salary |>
mutate(
salario_anual = case_when(
salary_type == "week" ~ current_salary * 52,
salary_type == "hour" ~ current_salary * 40 * 52,
TRUE ~ current_salary
),
performance_rating = if_else(performance_rating == "Developing", "Poor", performance_rating)
) |>
filter(salary_type != "week") |>
mutate(
salary_type = if_else(salary_type == "hour", "Contrato por Hora", "Contrato Fijo")
) |>
filter(!is.na(salario_anual)) |>
select(percent_incr, salary_type, salario_anual, performance_rating) |>
rename(incr_porcentual = percent_incr,
tipo_contrato = salary_type,
rating_performance = performance_rating)  |>
mutate(rating_performance = fct_recode(rating_performance,
"Malo" = "Poor",
"Normal" = "Succesful",
"Bueno" = "High",
"Excelente" = "Top"))
View(blizzard_salary)
View(blizzard_salary)
rm(blizzard_salary)
blizzard_salary <- blizzard_salary
blizzard_salary <- blizzard_salary |>
mutate(
salario_anual = case_when(
salary_type == "week" ~ current_salary * 52,
salary_type == "hour" ~ current_salary * 40 * 52,
TRUE ~ current_salary
),
performance_rating = if_else(performance_rating == "Developing", "Poor", performance_rating)
) |>
filter(salary_type != "week") |>
mutate(
salary_type = if_else(salary_type == "hour", "Contrato por Hora", "Contrato Fijo")
) |>
filter(!is.na(salario_anual)) |>
select(percent_incr, salary_type, salario_anual, performance_rating) |>
rename(incr_porcentual = percent_incr,
tipo_contrato = salary_type,
rating_performance = performance_rating)  |>
mutate(rating_performance = fct_recode(rating_performance,
"Malo" = "Poor",
"Normal" = "Successful",
"Bueno" = "High",
"Excelente" = "Top"))
blizzard_salary |> select(rating_performance) |> distinct() |> pull()
View(blizzard_salary)
ggplot(blizzard_salary, aes(x = salario_anual)) +
geom_histogram(binwidth = 10000, color = "white") +
facet_wrap(~tipo_contrato, ncol = 1) +
scale_x_continuous(labels = label_dollar(scale = 1/1000, suffix = "K"), breaks = seq(0, 250000, 25000)) +
labs(
x = "Salario Anual (en USD)",
y = "Frecuencia"
)
rm(blizzard_salary)
blizzard_salary <- blizzard_salary
blizzard_salary <- blizzard_salary |>
mutate(
salario_anual = case_when(
salary_type == "week" ~ current_salary * 52,
salary_type == "hour" ~ current_salary * 40 * 52,
TRUE ~ current_salary
),
performance_rating = if_else(performance_rating == "Developing", "Poor", performance_rating)
) |>
filter(salary_type != "week") |>
mutate(
salary_type = if_else(salary_type == "hour", "Contrato por Hora", "Contrato Fijo")
) |>
filter(!is.na(salario_anual)) |>
select(percent_incr, salary_type, salario_anual, performance_rating) |>
rename(incr_porcentual = percent_incr,
tipo_contrato = salary_type,
rating_performance = performance_rating)  |>
mutate(salario_anual = ifelse(salario_anual < 20000, 25000, salario_anual),
rating_performance = fct_recode(rating_performance,
"Malo" = "Poor",
"Normal" = "Successful",
"Bueno" = "High",
"Excelente" = "Top"))
ggplot(blizzard_salary, aes(x = salario_anual)) +
geom_histogram(binwidth = 10000, color = "white") +
facet_wrap(~tipo_contrato, ncol = 1) +
scale_x_continuous(labels = label_dollar(scale = 1/1000, suffix = "K"), breaks = seq(0, 250000, 25000)) +
labs(
x = "Salario Anual (en USD)",
y = "Frecuencia"
)
summarise(blizzard_salary$salario_anual)
summarise(blizzard_salary$salario_anual, na.rm=TRUE)
summary(blizzard_salary$salario_anual, na.rm=TRUE)
blizzard_salary |>
group_by(tipo_contrato) |>
summarise(salario_anual_promedio=mean(salario_anual),
salario_anual_mediana=median(salario_anual))
blizzard_salary |>
group_by(tipo_contrato) |>
summarise(salario_anual_promedio=mean(salario_anual),
salario_anual_mediana=median(salario_anual),)
blizzard_salary |>
group_by(tipo_contrato) |>
summarise(salario_anual_promedio=mean(salario_anual),
salario_anual_mediana=median(salario_anual),)
blizzard_salary |>
group_by(tipo_contrato) |>
summarise(salario_anual_promedio=mean(salario_anual),
salario_anual_sd=sd(salario_anual),)
model1 <- lm(incr_porcentual ~ salario_anual, data= blizzard_salary)
tidy(model1)
ggplot(blizzard_salary, aes(x = salario_anual, y = incr_porcentual, color = tipo_contrato)) +
geom_point(aes(shape = tipo_contrato), alpha = 0.4) +
geom_smooth(aes(linetype = tipo_contrato), method = "lm", se = FALSE, fullrange = TRUE) +
labs(
x = "Salario Anual",
y = "Incremento Porcential",
color = "Tipo de Contrato",
linetype = "Tipo de Contrato",
shape = "Tipo de Contrato"
) +
scale_x_continuous(labels = label_dollar()) +
scale_y_continuous(labels = label_percent(scale = 1)) +
theme(legend.position = "top")
ggplot(blizzard_salary, aes(x = salario_anual, y = percent_incr, color = tipo_contrato)) +
geom_point(aes(shape = tipo_contrato), alpha = 0.4) +
geom_smooth(aes(linetype = tipo_contrato), se = FALSE, fullrange = TRUE) +
labs(
x = "Salario Anual",
y = "Incremento Porcentual"
) +
scale_x_continuous(labels = label_dollar()) +
scale_y_continuous(labels = label_percent(scale = 1)) +
theme(legend.position = "top")
ggplot(blizzard_salary, aes(x = salario_anual, y = incr_porcentual)) +
geom_point(alpha = 0.4) +
geom_smooth( method = "lm", se = FALSE) +
labs(
x = "Salario Anual",
y = "Incremento Porcential",
) +
scale_x_continuous(labels = label_dollar()) +
scale_y_continuous(labels = label_percent(scale = 1)) +
theme_minimal()
model1 <- lm(percent_incr ~ annual_salary, data= blizzard_salary)
model1 <- lm(incr_porcentual ~ salario_anual, data= blizzard_salary)
tidy(model1)
augment(model1) %>%
ggplot(aes(x = .fitted, y = .resid)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(x = "Valores predichos", y = "Residuos")
augment(model1) %>%
ggplot(aes(x = .resid)) +
geom_histogram() +
labs(title = "Distribución de los residuos",
x = "Residuos") +
theme_minimal()
augment(model1) %>%
ggplot(aes(x = .fitted, y = .resid)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(x = "Valores predichos", y = "Residuos")
model1
augment(model1) %>%
ggplot(aes(x = .resid)) +
geom_histogram() +
labs(title = "Distribución de los residuos",
x = "Residuos") +
theme_minimal()
augment(model1) %>%
ggplot(aes(x = .fitted, y = .resid)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(x = "Valores predichos", y = "Residuos")
cor(blizzard_salary$incr_porcentual, blizzard_salary$salario_anual)
cor(blizzard_salary$incr_porcentual, blizzard_salary$salario_anual, na.rm=TRUE)
cor(blizzard_salary$incr_porcentual, blizzard_salary$salario_anual, rm.na=TRUE)
help(cor)
cor(blizzard_salary$incr_porcentual, blizzard_salary$salario_anual, rm.na=TRUE)}
cor(blizzard_salary$incr_porcentual, blizzard_salary$salario_anual, na.rm = TRUE)
blizzard_salary |>
drop_na(incr_porcentual, salario_anual) |> cor(salario_anual, incr_porcentual)
blizzard_salary |>
drop_na(incr_porcentual, salario_anual) |>
summarise(correlation = cor(salario_anual, incr_porcentual))
cor(blizzard_salary$incr_porcentual, blizzard_salary$salario_anual, use = "complete.obs")
0.0000159*1000
help(tidy)
